import { type NextPage } from "next";
import Head from "next/head";
import { Layout, Space, Button, ConfigProvider, Spin } from "antd";
import {
  Bars3BottomLeftIcon,
  ArrowDownTrayIcon,
  FunnelIcon,
} from "@heroicons/react/24/outline";

import { api } from "~/utils/api";
import ChartCard from "~/components/ChartCard";
import ChartOne from "~/components/ChartOne";
import ChartTwo from "~/components/ChartTwo";

const Home: NextPage = () => {
  const { data, isLoading, error } = api.covid.getCovidData.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ConfigProvider
        theme={{
          token: {
            // Tailwind emerald-700
            colorPrimary: "#047857",
          },
        }}
      >
        <Layout className="h-full">
          {/*}
        {isLoading && "Loading data from tRPCâ€¦"}
        {error && "Oooopsie! Something went wrong :("}
        {data && <pre>{JSON.stringify(data, null, 2)}</pre>}
        */}
          <Layout.Header className="flex items-center justify-between bg-transparent">
            <h1 className="text-lg font-semibold">Page title</h1>
            <Space>
              <Button className="flex items-center justify-between gap-2 px-4 py-2 font-medium">
                Export to PDF
                <ArrowDownTrayIcon className="h-5 w-5" />
              </Button>
              <Button className="flex items-center justify-between gap-2 px-4 py-2 font-medium">
                Notes<span className="text-gray-400">(3)</span>
                <Bars3BottomLeftIcon className="h-5 w-5" />
              </Button>
              <Button className="flex items-center justify-between gap-2 px-4 py-2 font-medium">
                Filter
                <div className="h-5 w-5 rounded-full bg-emerald-700 p-1 text-[0.75rem] leading-none text-white">
                  9+
                </div>
                <FunnelIcon className="h-5 w-5" />
              </Button>
            </Space>
          </Layout.Header>
          <Layout.Content>
            <div className="m-8 flex flex-col gap-8 md:m-16 md:flex-row">
              <ChartCard title="New cases">
                {isLoading && (
                  <Spin tip="Loading">
                    <div className="content" />
                  </Spin>
                )}
                {data && <ChartOne data={data} />}
                {error && "Oooopsie! Something went wrong :("}
              </ChartCard>
              <ChartCard title="Cases by nation">
                {isLoading && (
                  <Spin tip="Loading">
                    <div className="content" />
                  </Spin>
                )}
                {data && <ChartTwo />}
                {error && "Oooopsie! Something went wrong :("}
              </ChartCard>
            </div>
          </Layout.Content>
        </Layout>
      </ConfigProvider>
    </>
  );
};

export default Home;
